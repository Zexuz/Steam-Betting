// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoLib/BettingHistory.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace RpcCommunicationHistory {
  public static partial class Bettingv1HisotryService
  {
    static readonly string __ServiceName = "ChatCommunication.Bettingv1HisotryService";

    static readonly grpc::Marshaller<global::RpcCommunicationHistory.GetGlobalHistoryRequest> __Marshaller_GetGlobalHistoryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunicationHistory.GetGlobalHistoryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunicationHistory.MatchResponse> __Marshaller_MatchResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunicationHistory.MatchResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunicationHistory.GetPersonalHistoryRequest> __Marshaller_GetPersonalHistoryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunicationHistory.GetPersonalHistoryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunicationHistory.PingRequest> __Marshaller_PingRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunicationHistory.PingRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunicationHistory.PingResponse> __Marshaller_PingResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunicationHistory.PingResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::RpcCommunicationHistory.GetGlobalHistoryRequest, global::RpcCommunicationHistory.MatchResponse> __Method_GetGlobalHistory = new grpc::Method<global::RpcCommunicationHistory.GetGlobalHistoryRequest, global::RpcCommunicationHistory.MatchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGlobalHistory",
        __Marshaller_GetGlobalHistoryRequest,
        __Marshaller_MatchResponse);

    static readonly grpc::Method<global::RpcCommunicationHistory.GetPersonalHistoryRequest, global::RpcCommunicationHistory.MatchResponse> __Method_GetPersonalHistory = new grpc::Method<global::RpcCommunicationHistory.GetPersonalHistoryRequest, global::RpcCommunicationHistory.MatchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPersonalHistory",
        __Marshaller_GetPersonalHistoryRequest,
        __Marshaller_MatchResponse);

    static readonly grpc::Method<global::RpcCommunicationHistory.PingRequest, global::RpcCommunicationHistory.PingResponse> __Method_Ping = new grpc::Method<global::RpcCommunicationHistory.PingRequest, global::RpcCommunicationHistory.PingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ping",
        __Marshaller_PingRequest,
        __Marshaller_PingResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RpcCommunicationHistory.BettingHistoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Bettingv1HisotryService</summary>
    public abstract partial class Bettingv1HisotryServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::RpcCommunicationHistory.MatchResponse> GetGlobalHistory(global::RpcCommunicationHistory.GetGlobalHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunicationHistory.MatchResponse> GetPersonalHistory(global::RpcCommunicationHistory.GetPersonalHistoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunicationHistory.PingResponse> Ping(global::RpcCommunicationHistory.PingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Bettingv1HisotryService</summary>
    public partial class Bettingv1HisotryServiceClient : grpc::ClientBase<Bettingv1HisotryServiceClient>
    {
      /// <summary>Creates a new client for Bettingv1HisotryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public Bettingv1HisotryServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Bettingv1HisotryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public Bettingv1HisotryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected Bettingv1HisotryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected Bettingv1HisotryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::RpcCommunicationHistory.MatchResponse GetGlobalHistory(global::RpcCommunicationHistory.GetGlobalHistoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGlobalHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunicationHistory.MatchResponse GetGlobalHistory(global::RpcCommunicationHistory.GetGlobalHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGlobalHistory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunicationHistory.MatchResponse> GetGlobalHistoryAsync(global::RpcCommunicationHistory.GetGlobalHistoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGlobalHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunicationHistory.MatchResponse> GetGlobalHistoryAsync(global::RpcCommunicationHistory.GetGlobalHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGlobalHistory, null, options, request);
      }
      public virtual global::RpcCommunicationHistory.MatchResponse GetPersonalHistory(global::RpcCommunicationHistory.GetPersonalHistoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPersonalHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunicationHistory.MatchResponse GetPersonalHistory(global::RpcCommunicationHistory.GetPersonalHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPersonalHistory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunicationHistory.MatchResponse> GetPersonalHistoryAsync(global::RpcCommunicationHistory.GetPersonalHistoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPersonalHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunicationHistory.MatchResponse> GetPersonalHistoryAsync(global::RpcCommunicationHistory.GetPersonalHistoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPersonalHistory, null, options, request);
      }
      public virtual global::RpcCommunicationHistory.PingResponse Ping(global::RpcCommunicationHistory.PingRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Ping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunicationHistory.PingResponse Ping(global::RpcCommunicationHistory.PingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunicationHistory.PingResponse> PingAsync(global::RpcCommunicationHistory.PingRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunicationHistory.PingResponse> PingAsync(global::RpcCommunicationHistory.PingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Ping, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override Bettingv1HisotryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new Bettingv1HisotryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(Bettingv1HisotryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetGlobalHistory, serviceImpl.GetGlobalHistory)
          .AddMethod(__Method_GetPersonalHistory, serviceImpl.GetPersonalHistory)
          .AddMethod(__Method_Ping, serviceImpl.Ping).Build();
    }

  }
}
#endregion
