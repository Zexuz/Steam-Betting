// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protofiles/messages.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace RpcCommunication {
  /// <summary>
  ///these endpoints is on the nodejs server
  /// </summary>
  public static partial class SteamService
  {
    static readonly string __ServiceName = "WebsocketCommunication.SteamService";

    static readonly grpc::Marshaller<global::RpcCommunication.GetPlayerSteamInventoryRequest> __Marshaller_GetPlayerSteamInventoryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetPlayerSteamInventoryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetPlayerSteamInventoryResponse> __Marshaller_GetPlayerSteamInventoryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetPlayerSteamInventoryResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.MakeOfferRequest> __Marshaller_MakeOfferRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.MakeOfferRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.MakeOfferResponse> __Marshaller_MakeOfferResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.MakeOfferResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetPlayerInfoRequest> __Marshaller_GetPlayerInfoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetPlayerInfoRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetPlayerInfoResponse> __Marshaller_GetPlayerInfoResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetPlayerInfoResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetPlayerBackgroundRequest> __Marshaller_GetPlayerBackgroundRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetPlayerBackgroundRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetPlayerBackgroundResponse> __Marshaller_GetPlayerBackgroundResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetPlayerBackgroundResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.SellItemsFromOpskinsBotRequest> __Marshaller_SellItemsFromOpskinsBotRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.SellItemsFromOpskinsBotRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.SellItemsFromOpskinsBotResponse> __Marshaller_SellItemsFromOpskinsBotResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.SellItemsFromOpskinsBotResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.WithdrawBtcOpskinsRequest> __Marshaller_WithdrawBtcOpskinsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.WithdrawBtcOpskinsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.WithdrawBtcOpskinsResponse> __Marshaller_WithdrawBtcOpskinsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.WithdrawBtcOpskinsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.AccountBalanceOpskinsRequest> __Marshaller_AccountBalanceOpskinsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.AccountBalanceOpskinsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.AccountBalanceOpskinsResponse> __Marshaller_AccountBalanceOpskinsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.AccountBalanceOpskinsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.StartAllBotsRequest> __Marshaller_StartAllBotsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.StartAllBotsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.StartAllBotsResponse> __Marshaller_StartAllBotsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.StartAllBotsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.StopAllBotsRequest> __Marshaller_StopAllBotsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.StopAllBotsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.StopAllBotsResponse> __Marshaller_StopAllBotsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.StopAllBotsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetOfferLoggRequest> __Marshaller_GetOfferLoggRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetOfferLoggRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetOfferLoggResponse> __Marshaller_GetOfferLoggResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetOfferLoggResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetOpskinsLoggRequest> __Marshaller_GetOpskinsLoggRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetOpskinsLoggRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetOpskinsLoggResponse> __Marshaller_GetOpskinsLoggResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetOpskinsLoggResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetExceptionLoggRequest> __Marshaller_GetExceptionLoggRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetExceptionLoggRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetExceptionLoggResponse> __Marshaller_GetExceptionLoggResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetExceptionLoggResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetBotLoggRequest> __Marshaller_GetBotLoggRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetBotLoggRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetBotLoggResponse> __Marshaller_GetBotLoggResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetBotLoggResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetBotLoginInfoRequest> __Marshaller_GetBotLoginInfoRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetBotLoginInfoRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.GetBotLoginInfoResponse> __Marshaller_GetBotLoginInfoResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.GetBotLoginInfoResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.EmptyMessage> __Marshaller_EmptyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.EmptyMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::RpcCommunication.GetPlayerSteamInventoryRequest, global::RpcCommunication.GetPlayerSteamInventoryResponse> __Method_GetPlayerSteamInventory = new grpc::Method<global::RpcCommunication.GetPlayerSteamInventoryRequest, global::RpcCommunication.GetPlayerSteamInventoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayerSteamInventory",
        __Marshaller_GetPlayerSteamInventoryRequest,
        __Marshaller_GetPlayerSteamInventoryResponse);

    static readonly grpc::Method<global::RpcCommunication.MakeOfferRequest, global::RpcCommunication.MakeOfferResponse> __Method_MakeOffer = new grpc::Method<global::RpcCommunication.MakeOfferRequest, global::RpcCommunication.MakeOfferResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MakeOffer",
        __Marshaller_MakeOfferRequest,
        __Marshaller_MakeOfferResponse);

    static readonly grpc::Method<global::RpcCommunication.GetPlayerInfoRequest, global::RpcCommunication.GetPlayerInfoResponse> __Method_GetPlayerInfo = new grpc::Method<global::RpcCommunication.GetPlayerInfoRequest, global::RpcCommunication.GetPlayerInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayerInfo",
        __Marshaller_GetPlayerInfoRequest,
        __Marshaller_GetPlayerInfoResponse);

    static readonly grpc::Method<global::RpcCommunication.GetPlayerBackgroundRequest, global::RpcCommunication.GetPlayerBackgroundResponse> __Method_GetPlayerBackground = new grpc::Method<global::RpcCommunication.GetPlayerBackgroundRequest, global::RpcCommunication.GetPlayerBackgroundResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlayerBackground",
        __Marshaller_GetPlayerBackgroundRequest,
        __Marshaller_GetPlayerBackgroundResponse);

    static readonly grpc::Method<global::RpcCommunication.SellItemsFromOpskinsBotRequest, global::RpcCommunication.SellItemsFromOpskinsBotResponse> __Method_SellItems = new grpc::Method<global::RpcCommunication.SellItemsFromOpskinsBotRequest, global::RpcCommunication.SellItemsFromOpskinsBotResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SellItems",
        __Marshaller_SellItemsFromOpskinsBotRequest,
        __Marshaller_SellItemsFromOpskinsBotResponse);

    static readonly grpc::Method<global::RpcCommunication.WithdrawBtcOpskinsRequest, global::RpcCommunication.WithdrawBtcOpskinsResponse> __Method_WithdrawBtcOpskins = new grpc::Method<global::RpcCommunication.WithdrawBtcOpskinsRequest, global::RpcCommunication.WithdrawBtcOpskinsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "WithdrawBtcOpskins",
        __Marshaller_WithdrawBtcOpskinsRequest,
        __Marshaller_WithdrawBtcOpskinsResponse);

    static readonly grpc::Method<global::RpcCommunication.AccountBalanceOpskinsRequest, global::RpcCommunication.AccountBalanceOpskinsResponse> __Method_AccountBalanceOpskins = new grpc::Method<global::RpcCommunication.AccountBalanceOpskinsRequest, global::RpcCommunication.AccountBalanceOpskinsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccountBalanceOpskins",
        __Marshaller_AccountBalanceOpskinsRequest,
        __Marshaller_AccountBalanceOpskinsResponse);

    static readonly grpc::Method<global::RpcCommunication.StartAllBotsRequest, global::RpcCommunication.StartAllBotsResponse> __Method_StartAllBots = new grpc::Method<global::RpcCommunication.StartAllBotsRequest, global::RpcCommunication.StartAllBotsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartAllBots",
        __Marshaller_StartAllBotsRequest,
        __Marshaller_StartAllBotsResponse);

    static readonly grpc::Method<global::RpcCommunication.StopAllBotsRequest, global::RpcCommunication.StopAllBotsResponse> __Method_StopAllBots = new grpc::Method<global::RpcCommunication.StopAllBotsRequest, global::RpcCommunication.StopAllBotsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopAllBots",
        __Marshaller_StopAllBotsRequest,
        __Marshaller_StopAllBotsResponse);

    static readonly grpc::Method<global::RpcCommunication.GetOfferLoggRequest, global::RpcCommunication.GetOfferLoggResponse> __Method_GetOfferLogg = new grpc::Method<global::RpcCommunication.GetOfferLoggRequest, global::RpcCommunication.GetOfferLoggResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOfferLogg",
        __Marshaller_GetOfferLoggRequest,
        __Marshaller_GetOfferLoggResponse);

    static readonly grpc::Method<global::RpcCommunication.GetOpskinsLoggRequest, global::RpcCommunication.GetOpskinsLoggResponse> __Method_GetOpskinsLogg = new grpc::Method<global::RpcCommunication.GetOpskinsLoggRequest, global::RpcCommunication.GetOpskinsLoggResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOpskinsLogg",
        __Marshaller_GetOpskinsLoggRequest,
        __Marshaller_GetOpskinsLoggResponse);

    static readonly grpc::Method<global::RpcCommunication.GetExceptionLoggRequest, global::RpcCommunication.GetExceptionLoggResponse> __Method_GetExceptionLogg = new grpc::Method<global::RpcCommunication.GetExceptionLoggRequest, global::RpcCommunication.GetExceptionLoggResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExceptionLogg",
        __Marshaller_GetExceptionLoggRequest,
        __Marshaller_GetExceptionLoggResponse);

    static readonly grpc::Method<global::RpcCommunication.GetBotLoggRequest, global::RpcCommunication.GetBotLoggResponse> __Method_GetBotLogg = new grpc::Method<global::RpcCommunication.GetBotLoggRequest, global::RpcCommunication.GetBotLoggResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBotLogg",
        __Marshaller_GetBotLoggRequest,
        __Marshaller_GetBotLoggResponse);

    static readonly grpc::Method<global::RpcCommunication.GetBotLoginInfoRequest, global::RpcCommunication.GetBotLoginInfoResponse> __Method_GetBotLoginInfo = new grpc::Method<global::RpcCommunication.GetBotLoginInfoRequest, global::RpcCommunication.GetBotLoginInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBotLoginInfo",
        __Marshaller_GetBotLoginInfoRequest,
        __Marshaller_GetBotLoginInfoResponse);

    static readonly grpc::Method<global::RpcCommunication.EmptyMessage, global::RpcCommunication.EmptyMessage> __Method_Ping = new grpc::Method<global::RpcCommunication.EmptyMessage, global::RpcCommunication.EmptyMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ping",
        __Marshaller_EmptyMessage,
        __Marshaller_EmptyMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RpcCommunication.MessagesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SteamService</summary>
    public abstract partial class SteamServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetPlayerSteamInventoryResponse> GetPlayerSteamInventory(global::RpcCommunication.GetPlayerSteamInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.MakeOfferResponse> MakeOffer(global::RpcCommunication.MakeOfferRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetPlayerInfoResponse> GetPlayerInfo(global::RpcCommunication.GetPlayerInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetPlayerBackgroundResponse> GetPlayerBackground(global::RpcCommunication.GetPlayerBackgroundRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.SellItemsFromOpskinsBotResponse> SellItems(global::RpcCommunication.SellItemsFromOpskinsBotRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.WithdrawBtcOpskinsResponse> WithdrawBtcOpskins(global::RpcCommunication.WithdrawBtcOpskinsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.AccountBalanceOpskinsResponse> AccountBalanceOpskins(global::RpcCommunication.AccountBalanceOpskinsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.StartAllBotsResponse> StartAllBots(global::RpcCommunication.StartAllBotsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.StopAllBotsResponse> StopAllBots(global::RpcCommunication.StopAllBotsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetOfferLoggResponse> GetOfferLogg(global::RpcCommunication.GetOfferLoggRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetOpskinsLoggResponse> GetOpskinsLogg(global::RpcCommunication.GetOpskinsLoggRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetExceptionLoggResponse> GetExceptionLogg(global::RpcCommunication.GetExceptionLoggRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetBotLoggResponse> GetBotLogg(global::RpcCommunication.GetBotLoggRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.GetBotLoginInfoResponse> GetBotLoginInfo(global::RpcCommunication.GetBotLoginInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.EmptyMessage> Ping(global::RpcCommunication.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SteamService</summary>
    public partial class SteamServiceClient : grpc::ClientBase<SteamServiceClient>
    {
      /// <summary>Creates a new client for SteamService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SteamServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SteamService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SteamServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SteamServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SteamServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::RpcCommunication.GetPlayerSteamInventoryResponse GetPlayerSteamInventory(global::RpcCommunication.GetPlayerSteamInventoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPlayerSteamInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetPlayerSteamInventoryResponse GetPlayerSteamInventory(global::RpcCommunication.GetPlayerSteamInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayerSteamInventory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetPlayerSteamInventoryResponse> GetPlayerSteamInventoryAsync(global::RpcCommunication.GetPlayerSteamInventoryRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPlayerSteamInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetPlayerSteamInventoryResponse> GetPlayerSteamInventoryAsync(global::RpcCommunication.GetPlayerSteamInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayerSteamInventory, null, options, request);
      }
      public virtual global::RpcCommunication.MakeOfferResponse MakeOffer(global::RpcCommunication.MakeOfferRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MakeOffer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.MakeOfferResponse MakeOffer(global::RpcCommunication.MakeOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MakeOffer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.MakeOfferResponse> MakeOfferAsync(global::RpcCommunication.MakeOfferRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MakeOfferAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.MakeOfferResponse> MakeOfferAsync(global::RpcCommunication.MakeOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MakeOffer, null, options, request);
      }
      public virtual global::RpcCommunication.GetPlayerInfoResponse GetPlayerInfo(global::RpcCommunication.GetPlayerInfoRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPlayerInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetPlayerInfoResponse GetPlayerInfo(global::RpcCommunication.GetPlayerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayerInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetPlayerInfoResponse> GetPlayerInfoAsync(global::RpcCommunication.GetPlayerInfoRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPlayerInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetPlayerInfoResponse> GetPlayerInfoAsync(global::RpcCommunication.GetPlayerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayerInfo, null, options, request);
      }
      public virtual global::RpcCommunication.GetPlayerBackgroundResponse GetPlayerBackground(global::RpcCommunication.GetPlayerBackgroundRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPlayerBackground(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetPlayerBackgroundResponse GetPlayerBackground(global::RpcCommunication.GetPlayerBackgroundRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlayerBackground, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetPlayerBackgroundResponse> GetPlayerBackgroundAsync(global::RpcCommunication.GetPlayerBackgroundRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPlayerBackgroundAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetPlayerBackgroundResponse> GetPlayerBackgroundAsync(global::RpcCommunication.GetPlayerBackgroundRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlayerBackground, null, options, request);
      }
      public virtual global::RpcCommunication.SellItemsFromOpskinsBotResponse SellItems(global::RpcCommunication.SellItemsFromOpskinsBotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.SellItemsFromOpskinsBotResponse SellItems(global::RpcCommunication.SellItemsFromOpskinsBotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SellItems, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.SellItemsFromOpskinsBotResponse> SellItemsAsync(global::RpcCommunication.SellItemsFromOpskinsBotRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SellItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.SellItemsFromOpskinsBotResponse> SellItemsAsync(global::RpcCommunication.SellItemsFromOpskinsBotRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SellItems, null, options, request);
      }
      public virtual global::RpcCommunication.WithdrawBtcOpskinsResponse WithdrawBtcOpskins(global::RpcCommunication.WithdrawBtcOpskinsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return WithdrawBtcOpskins(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.WithdrawBtcOpskinsResponse WithdrawBtcOpskins(global::RpcCommunication.WithdrawBtcOpskinsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_WithdrawBtcOpskins, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.WithdrawBtcOpskinsResponse> WithdrawBtcOpskinsAsync(global::RpcCommunication.WithdrawBtcOpskinsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return WithdrawBtcOpskinsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.WithdrawBtcOpskinsResponse> WithdrawBtcOpskinsAsync(global::RpcCommunication.WithdrawBtcOpskinsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_WithdrawBtcOpskins, null, options, request);
      }
      public virtual global::RpcCommunication.AccountBalanceOpskinsResponse AccountBalanceOpskins(global::RpcCommunication.AccountBalanceOpskinsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AccountBalanceOpskins(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.AccountBalanceOpskinsResponse AccountBalanceOpskins(global::RpcCommunication.AccountBalanceOpskinsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccountBalanceOpskins, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.AccountBalanceOpskinsResponse> AccountBalanceOpskinsAsync(global::RpcCommunication.AccountBalanceOpskinsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AccountBalanceOpskinsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.AccountBalanceOpskinsResponse> AccountBalanceOpskinsAsync(global::RpcCommunication.AccountBalanceOpskinsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccountBalanceOpskins, null, options, request);
      }
      public virtual global::RpcCommunication.StartAllBotsResponse StartAllBots(global::RpcCommunication.StartAllBotsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StartAllBots(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.StartAllBotsResponse StartAllBots(global::RpcCommunication.StartAllBotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartAllBots, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.StartAllBotsResponse> StartAllBotsAsync(global::RpcCommunication.StartAllBotsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StartAllBotsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.StartAllBotsResponse> StartAllBotsAsync(global::RpcCommunication.StartAllBotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartAllBots, null, options, request);
      }
      public virtual global::RpcCommunication.StopAllBotsResponse StopAllBots(global::RpcCommunication.StopAllBotsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StopAllBots(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.StopAllBotsResponse StopAllBots(global::RpcCommunication.StopAllBotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopAllBots, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.StopAllBotsResponse> StopAllBotsAsync(global::RpcCommunication.StopAllBotsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StopAllBotsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.StopAllBotsResponse> StopAllBotsAsync(global::RpcCommunication.StopAllBotsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopAllBots, null, options, request);
      }
      public virtual global::RpcCommunication.GetOfferLoggResponse GetOfferLogg(global::RpcCommunication.GetOfferLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOfferLogg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetOfferLoggResponse GetOfferLogg(global::RpcCommunication.GetOfferLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOfferLogg, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetOfferLoggResponse> GetOfferLoggAsync(global::RpcCommunication.GetOfferLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOfferLoggAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetOfferLoggResponse> GetOfferLoggAsync(global::RpcCommunication.GetOfferLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOfferLogg, null, options, request);
      }
      public virtual global::RpcCommunication.GetOpskinsLoggResponse GetOpskinsLogg(global::RpcCommunication.GetOpskinsLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOpskinsLogg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetOpskinsLoggResponse GetOpskinsLogg(global::RpcCommunication.GetOpskinsLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOpskinsLogg, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetOpskinsLoggResponse> GetOpskinsLoggAsync(global::RpcCommunication.GetOpskinsLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOpskinsLoggAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetOpskinsLoggResponse> GetOpskinsLoggAsync(global::RpcCommunication.GetOpskinsLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOpskinsLogg, null, options, request);
      }
      public virtual global::RpcCommunication.GetExceptionLoggResponse GetExceptionLogg(global::RpcCommunication.GetExceptionLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetExceptionLogg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetExceptionLoggResponse GetExceptionLogg(global::RpcCommunication.GetExceptionLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExceptionLogg, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetExceptionLoggResponse> GetExceptionLoggAsync(global::RpcCommunication.GetExceptionLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetExceptionLoggAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetExceptionLoggResponse> GetExceptionLoggAsync(global::RpcCommunication.GetExceptionLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExceptionLogg, null, options, request);
      }
      public virtual global::RpcCommunication.GetBotLoggResponse GetBotLogg(global::RpcCommunication.GetBotLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetBotLogg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetBotLoggResponse GetBotLogg(global::RpcCommunication.GetBotLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBotLogg, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetBotLoggResponse> GetBotLoggAsync(global::RpcCommunication.GetBotLoggRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetBotLoggAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetBotLoggResponse> GetBotLoggAsync(global::RpcCommunication.GetBotLoggRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBotLogg, null, options, request);
      }
      public virtual global::RpcCommunication.GetBotLoginInfoResponse GetBotLoginInfo(global::RpcCommunication.GetBotLoginInfoRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetBotLoginInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.GetBotLoginInfoResponse GetBotLoginInfo(global::RpcCommunication.GetBotLoginInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBotLoginInfo, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetBotLoginInfoResponse> GetBotLoginInfoAsync(global::RpcCommunication.GetBotLoginInfoRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetBotLoginInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.GetBotLoginInfoResponse> GetBotLoginInfoAsync(global::RpcCommunication.GetBotLoginInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBotLoginInfo, null, options, request);
      }
      public virtual global::RpcCommunication.EmptyMessage Ping(global::RpcCommunication.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Ping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.EmptyMessage Ping(global::RpcCommunication.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.EmptyMessage> PingAsync(global::RpcCommunication.EmptyMessage request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.EmptyMessage> PingAsync(global::RpcCommunication.EmptyMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Ping, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SteamServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SteamServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SteamServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPlayerSteamInventory, serviceImpl.GetPlayerSteamInventory)
          .AddMethod(__Method_MakeOffer, serviceImpl.MakeOffer)
          .AddMethod(__Method_GetPlayerInfo, serviceImpl.GetPlayerInfo)
          .AddMethod(__Method_GetPlayerBackground, serviceImpl.GetPlayerBackground)
          .AddMethod(__Method_SellItems, serviceImpl.SellItems)
          .AddMethod(__Method_WithdrawBtcOpskins, serviceImpl.WithdrawBtcOpskins)
          .AddMethod(__Method_AccountBalanceOpskins, serviceImpl.AccountBalanceOpskins)
          .AddMethod(__Method_StartAllBots, serviceImpl.StartAllBots)
          .AddMethod(__Method_StopAllBots, serviceImpl.StopAllBots)
          .AddMethod(__Method_GetOfferLogg, serviceImpl.GetOfferLogg)
          .AddMethod(__Method_GetOpskinsLogg, serviceImpl.GetOpskinsLogg)
          .AddMethod(__Method_GetExceptionLogg, serviceImpl.GetExceptionLogg)
          .AddMethod(__Method_GetBotLogg, serviceImpl.GetBotLogg)
          .AddMethod(__Method_GetBotLoginInfo, serviceImpl.GetBotLoginInfo)
          .AddMethod(__Method_Ping, serviceImpl.Ping).Build();
    }

  }
  /// <summary>
  ///This is for the c# web api server "onOfferSatusChange"
  /// </summary>
  public static partial class StatusChanged
  {
    static readonly string __ServiceName = "WebsocketCommunication.StatusChanged";

    static readonly grpc::Marshaller<global::RpcCommunication.OfferStatusRequest> __Marshaller_OfferStatusRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.OfferStatusRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.OfferStatusResponse> __Marshaller_OfferStatusResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.OfferStatusResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.SteamStatusRequest> __Marshaller_SteamStatusRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.SteamStatusRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.SteamStatusResponse> __Marshaller_SteamStatusResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.SteamStatusResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.BotStatusChangedRequest> __Marshaller_BotStatusChangedRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.BotStatusChangedRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.BotStatusChangedResponse> __Marshaller_BotStatusChangedResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.BotStatusChangedResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.OpskinsStatusChangedRequest> __Marshaller_OpskinsStatusChangedRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.OpskinsStatusChangedRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RpcCommunication.OpskinsStatusChangedResponse> __Marshaller_OpskinsStatusChangedResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RpcCommunication.OpskinsStatusChangedResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::RpcCommunication.OfferStatusRequest, global::RpcCommunication.OfferStatusResponse> __Method_OfferStatusChanged = new grpc::Method<global::RpcCommunication.OfferStatusRequest, global::RpcCommunication.OfferStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OfferStatusChanged",
        __Marshaller_OfferStatusRequest,
        __Marshaller_OfferStatusResponse);

    static readonly grpc::Method<global::RpcCommunication.SteamStatusRequest, global::RpcCommunication.SteamStatusResponse> __Method_SteamStatusChanged = new grpc::Method<global::RpcCommunication.SteamStatusRequest, global::RpcCommunication.SteamStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SteamStatusChanged",
        __Marshaller_SteamStatusRequest,
        __Marshaller_SteamStatusResponse);

    static readonly grpc::Method<global::RpcCommunication.BotStatusChangedRequest, global::RpcCommunication.BotStatusChangedResponse> __Method_BotStatusChanged = new grpc::Method<global::RpcCommunication.BotStatusChangedRequest, global::RpcCommunication.BotStatusChangedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BotStatusChanged",
        __Marshaller_BotStatusChangedRequest,
        __Marshaller_BotStatusChangedResponse);

    static readonly grpc::Method<global::RpcCommunication.OpskinsStatusChangedRequest, global::RpcCommunication.OpskinsStatusChangedResponse> __Method_OpskinsStatusChanged = new grpc::Method<global::RpcCommunication.OpskinsStatusChangedRequest, global::RpcCommunication.OpskinsStatusChangedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OpskinsStatusChanged",
        __Marshaller_OpskinsStatusChangedRequest,
        __Marshaller_OpskinsStatusChangedResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RpcCommunication.MessagesReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of StatusChanged</summary>
    public abstract partial class StatusChangedBase
    {
      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.OfferStatusResponse> OfferStatusChanged(global::RpcCommunication.OfferStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.SteamStatusResponse> SteamStatusChanged(global::RpcCommunication.SteamStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.BotStatusChangedResponse> BotStatusChanged(global::RpcCommunication.BotStatusChangedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::RpcCommunication.OpskinsStatusChangedResponse> OpskinsStatusChanged(global::RpcCommunication.OpskinsStatusChangedRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for StatusChanged</summary>
    public partial class StatusChangedClient : grpc::ClientBase<StatusChangedClient>
    {
      /// <summary>Creates a new client for StatusChanged</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public StatusChangedClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StatusChanged that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public StatusChangedClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected StatusChangedClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected StatusChangedClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::RpcCommunication.OfferStatusResponse OfferStatusChanged(global::RpcCommunication.OfferStatusRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return OfferStatusChanged(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.OfferStatusResponse OfferStatusChanged(global::RpcCommunication.OfferStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OfferStatusChanged, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.OfferStatusResponse> OfferStatusChangedAsync(global::RpcCommunication.OfferStatusRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return OfferStatusChangedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.OfferStatusResponse> OfferStatusChangedAsync(global::RpcCommunication.OfferStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OfferStatusChanged, null, options, request);
      }
      public virtual global::RpcCommunication.SteamStatusResponse SteamStatusChanged(global::RpcCommunication.SteamStatusRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SteamStatusChanged(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.SteamStatusResponse SteamStatusChanged(global::RpcCommunication.SteamStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SteamStatusChanged, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.SteamStatusResponse> SteamStatusChangedAsync(global::RpcCommunication.SteamStatusRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SteamStatusChangedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.SteamStatusResponse> SteamStatusChangedAsync(global::RpcCommunication.SteamStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SteamStatusChanged, null, options, request);
      }
      public virtual global::RpcCommunication.BotStatusChangedResponse BotStatusChanged(global::RpcCommunication.BotStatusChangedRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BotStatusChanged(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.BotStatusChangedResponse BotStatusChanged(global::RpcCommunication.BotStatusChangedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BotStatusChanged, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.BotStatusChangedResponse> BotStatusChangedAsync(global::RpcCommunication.BotStatusChangedRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BotStatusChangedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.BotStatusChangedResponse> BotStatusChangedAsync(global::RpcCommunication.BotStatusChangedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BotStatusChanged, null, options, request);
      }
      public virtual global::RpcCommunication.OpskinsStatusChangedResponse OpskinsStatusChanged(global::RpcCommunication.OpskinsStatusChangedRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return OpskinsStatusChanged(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::RpcCommunication.OpskinsStatusChangedResponse OpskinsStatusChanged(global::RpcCommunication.OpskinsStatusChangedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpskinsStatusChanged, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.OpskinsStatusChangedResponse> OpskinsStatusChangedAsync(global::RpcCommunication.OpskinsStatusChangedRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return OpskinsStatusChangedAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::RpcCommunication.OpskinsStatusChangedResponse> OpskinsStatusChangedAsync(global::RpcCommunication.OpskinsStatusChangedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpskinsStatusChanged, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override StatusChangedClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StatusChangedClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(StatusChangedBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_OfferStatusChanged, serviceImpl.OfferStatusChanged)
          .AddMethod(__Method_SteamStatusChanged, serviceImpl.SteamStatusChanged)
          .AddMethod(__Method_BotStatusChanged, serviceImpl.BotStatusChanged)
          .AddMethod(__Method_OpskinsStatusChanged, serviceImpl.OpskinsStatusChanged).Build();
    }

  }
}
#endregion
